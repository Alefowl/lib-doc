Доступ к сервисам: 
1.	Project Owner организует выдачу доступа стажеру в gitHub
2.	Стажер должен войти во все системы, при необходимости зарегистрироваться в них 

Для работы в проекте стажеру понадобятся следующие программы:
1.	Postgres + pgAdmin 
2.	Postman 
3.	Node.js
4.	Java
5.	Vasual Studio Code/IntelliJ IDEA
Инструкции по скачиванию и настройке будут ниже.
Развертывание сервиса Lib-front:

1) Установка и развёртывание PostgreSQL:
1.	Установить и настроить базу данных (PostgreSQL). 
1.1.	Скачать БД с официального сайта "PostgreSQL " https://www.postgresql.org/
1.2.	Установить pgAdmin
1.3.	Создать в pgAdmin новую БД под названием kapinuss, без пароля.
2.	Наполнить базу данных тестовыми данными.
2.1.	Перейти в репозиторий https://github.com/stakap/lib-doc
2.2.	Перейти в папку Database
2.3.	Изучить схему БД "BD Alefowl.jpg" (схема может быть неактуальной – необходимо уточнить у Наставника)
2.4.	Взять готовые таблицы из файла "database.txt", создать таблицы в своей БД.
2.5.	Добавить 2-3 записи в каждую таблицу, заполнить все поля согласно связям в схеме БД.

2) Установка и развёртывание Postman (при необходимости):
1.	Скачать Postman https://www.postman.com/downloads/ 
2.	Зарегистрироваться и авторизоваться.
3.	Изучите документацию по Api https://github.com/stakap/lib-doc/tree/master/Backend/test%20docs/Тест-Кейсы 
4.	Выберете POST/GET запросы на добавление данных в таблице и сделайте подобные со своими значениями

3) Node.js cкачать и установить с сайта - https://nodejs.org/en

4) Настройка Java
1.	Установить (Java JAR) и запустить его локально:
1.1.	Скачать и установить Java на компьютер https://www.java.com/ru/download/manual.jsp.
1.2.	Запросить у наставника jar файл бекенда (если не был направлен ранее).
1.3.	Открыть с помощью winrar или zip Extractor или похожих программ.
1.4.	В нем найти файл Local.conf и открыть его с помощью текстового редактора.
1.5.	Далее проверить номер порта (должен быть 8080) а также строку:
db = { url = "jdbc:postgresql://localhost:5432/kapinuss", login = "postgres", password = "" }
Kapinuss - это название вашей БД (если вы ее назвали по-другому, написать актуальное для вас название).
Postgres - имя владельца БД оно установлено по умолчанию, если вы ничего не меняли - тут все верно.
password - впишите пароль, который вы указывали при создании БД, если не указали, то оставьте поле пустым.
Сохраните изменения и выходите.
Обязательно перепроверьте, сохранились ли данные, иногда некоторые архиваторы не сохраняют изменения. В данном случае используйте другой архиватор
1.6.	Откройте консоль или терминал и убедитесь, что вы установили java: Напишите команду java –version. Должно показать версию java.
1.7.	Далее нужно указать путь до вашего файла. Изначально путь показывается как C:\Users\"имя пользователя" (для windows), /Users/имяпользователя/ (для Mac)
вы можете либо поместить ваш файл в папку пользователя, либо поменять путь командой "cd" 

5) Установить IDE, например: "IntelliJ IDEA-https://www.jetbrains.com/ru-ru/idea/ или VS code-https://code.visualstudio.com/ 
 IDE умеют работать с гитом. Также с их помощью можно легче разобраться с кодом фронтенда.
Можно работать через консоль

Развертывание сервиса
1.	Установить и запустить фронтенд (Lib-front).
1.1.	Сделать клон репозитория себе локально:
1.1.1.	В Github авторизоваться в своем аккаунте.
1.1.2.	Через консоль/терминал ввести команду "git clone https://github.com/stakap/lib-front.git "
1.1.3.	После выполнения команды папка lib-front должна клонироваться в C:\Users\"имя пользователя" (для windows), /Users/имяпользователя (для Mac) (ели не вносили изменения)
1.2.	Открыть в папке lib-front файл "AxiosInstance" с помощью блокнота или IDE, путь к файлу: lib-front/src/components/AxiosInstance
Найти строку baseURL: ввести адрес и порт бекенда. Содержание файла должно быть:

import axios from 'axios'
export const instance = axios.create({
  baseURL: 'http://localhost:8080',
  timeout: 10000
});

1.3.	Сохранить изменения в файле
2.	Запустить весь сервис локально:
2.1.	Ранее вы должны были добавить записи в БД (если не добавили, самое время заполнить БД!)
2.2.	Запустить через терминал/консоль/IDE jar файл с помощью команды "java -jar local3.jar", где local3 это название вашего файла (при запуске команды убедитесь, что в терминале вы находитесь в папке расположения jar файла).
2.3.	Открыть второй терминал. Запустить команду "npm start" (при запуске команды убедитесь, что в терминале вы находитесь в папке расположения npm файла).
2.4.	При успешном выполнении инструкции откроется сайт в браузере если все сделано верно, вы увидите похожее на:
[pool-1-thread-1] INFO  c.z.h.HikariDataSource - HikariPool-1 - Starting...
[pool-1-thread-1] INFO  c.z.h.HikariDataSource - HikariPool-1 - Start completed.
[io-compute-11] INFO  o.h.e.s.EmberServerBuilderCompanionPlatform - Ember-Server service bound to address: [::]:8080
3.	После того, как развернули фронт, ознакомьтесь со всей документацией по проекту, которая лежит в репозитории в папке lib doc



Lib-view
Project Owner организует выдачу доступа стажеру в gitHub
Стажер должен войти во все системы, при необходимости зарегистрироваться в них 

Для работы в проекте стажеру понадобятся следующие программы:
1.	Postgres + pgAdmin 
2.	Postman 
3.     Vasual Studio Code/IntelliJ IDEA
4.	Java\Scala + Sbt
Инструкции по скачиванию и настройке будут ниже.

1) Установка и развёртывание PostgreSQL:
1.	Установить и настроить базу данных (PostgreSQL). 
1.1.	Скачать БД с официального сайта "PostgreSQL " https://www.postgresql.org/
1.2.	Установить pgAdmin
1.3.	Создать в pgAdmin новую БД под названием kapinuss, без пароля.
2.	Наполнить базу данных тестовыми данными.
2.1.	Перейти в репозиторий lib-doc "GitHub stakap/lib-doc " stakap/lib-doc (github.com)
2.2.	Перейти в папку Database
2.3.	Изучить схему БД "BD Alefowl.jpg" (схема может быть неактуальной – необходим уточнить у Наставника)
2.4.	Взять готовые таблицы из файла "database.txt", создать таблицы в своей БД.
2.5.	Добавить 2-3 записи в каждую таблицу, заполнить все поля согласно связям, в схеме БД.

2) Установка  Postman (при необходимости):
1.	Скачать Postman https://www.postman.com/downloads/ 
2.	Зарегистрироваться и авторизоваться.
3.	Изучите документацию по Api https://github.com/stakap/lib-doc/tree/master/Backend/test%20docs/Тест-Кейсы 
4.	Выберете POST/GET запросы на добавление данных в таблице и сделайте подобные со своими значениями

3) Установить IDE, например: "IntelliJ IDEA-https://www.jetbrains.com/ru-ru/idea/ или VS code-https://code.visualstudio.com/ 
 IDE умеют работать с гитом. Также с их помощью можно легче разобраться с кодом фронтенда.
Можно работать через консоль

4) Java:
1.	Скачать и установить Java: https://www.java.com/ru/download/manual.jsp
1.1.	Откройте консоль или терминал и убедитесь, что вы установили java: Напишите команду java -version (должно показать версию джавы)
2.	Скачать и установить Git https://git-scm.com/
3.	Установить IDE, например: "IntelliJ IDEA-https://www.jetbrains.com/ru-ru/idea/ или VS code-https://code.visualstudio.com/ 
4.	IDE умеют работать с гитом. Также с их помощью можно легче разобраться с кодом фронтенда.
Можно работать через консоль
5.	Развернуть и настроить сервис lib-view.
5.1.	Сделать клон репозитория себе локально "git clone https://github.com/stakap/lib-view.git" .
5.2.	Подключить свой аккаунт Github. В Github авторизоваться в своем аккаунте. Обратите внимание – логин/имя/фамилия должны позволять вас однозначно идентифицировать.

4.1) Scala
1.	Найти в репозитории файл "build.sbt"
2.	Найти строчку с версией языка скала " scalaVersion :=" и посмотреть версию языка скала.
3.	Скачать и установить язык скала той версии, которая указана в строке " scalaVersion :="Install" (https://scala-lang.org/download/ )
4.	Скачать и установить SBT "sbt Download " ( sbt - Download (scala-sbt.org)) 
5.	Открыть файл "application.conf" в репозитории lib-view
6.	Найти строку db = { url = "jdbc:postgresql://localhost:5432/kapinuss", login = "postgres", password = "" } . Добавить свои локальные данные БД

Развертывание сервиса lib-view
1.	Развернуть и настроить сервис lib-view.
1.1.	Сделать клон репозитория себе локально "git clone https://github.com/stakap/lib-view.git" . Подключить свой аккаунт Github
1.2.	Найти в репозитории файл "build.sbt"
1.3.	Найти строчку с версией языка скала " scalaVersion :=" и посмотреть версию языка скала.
1.4.	Скачать и установить язык скала той версии, которая указана в строке " scalaVersion :="Install" (https://scala-lang.org/download/ )
1.5.	Скачать и установить SBT "sbt Download " ( sbt - Download (scala-sbt.org)) 
1.6.	Открыть файл "application.conf" в репозитории lib-view
1.7.	Найти строку db = { url = "jdbc:postgresql://localhost:5432/kapinuss", login = "postgres", password = "" } . Добавить свои локальные данные БД
2.	Запустить lib-view  командой "sbt run" с помощью IDE\Терминала


