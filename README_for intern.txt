ПРОЦЕСС АДАПТАЦИИ
Проект Alefowl.com: библиотека билингвальных книг

ДОСТУПЫ
- получите у Product owner доступы к необходимым сервисам, таким как Miro, GitHub
- войдите во все системы (при необходимости - зарегистрируйтесь в них)

ДЛЯ НАЧАЛА РАБОТЫ НЕОБХОДИМО
- скачайте и установите базу данных PostgreSQL ( https://www.postgresql.org/ )
- скачайте и установите Postman ( https://www.postman.com/downloads/ )
- скачайте и установите Git ( https://git-scm.com/ )
- скачайте и установите Node.js ( https://nodejs.org/en )
- скачайте и установите Java версии не ниже 1.8.0 ( https://www.java.com/ru/download/manual.jsp )
- скачайте и установите Idea* ( https://www.jetbrains.com/ru-ru/idea/ )
	* вместо Idea можно использовать Visual Studio Code, если это удобнее

ИНСТРУКЦИЯ ДЛЯ ЛОКАЛЬНОГО РАЗВЕРТЫВАНИЯ ПРОЕКТА

СОЗДАНИЕ ЛОКАЛЬНОЙ БД
1) создайте в pgAdmin новую БД под названием 'kapinuss', желательно без пароля (эта БД должна иметь такую же структуру, как и удаленная БД).
	Если без пароля создать БД не получится, используйте простой пароль, например '123456'
2) создайте в БД 13 таблиц (для создания таблиц ознакомьтесь с содержимым файлов в директории 'lib-doc/Database')
3) для первого запуска приложения локальная БД может не содержать данных, однако для дальнейшей работы заполните таблицы БД, используя SQL-запросы.

	КАК ДЕЛАТЬ SQL-запросы:
	3.1) откройте query tool
	3.2) введите запрос Insert Into (название таблицы, атрибуты таблицы), value (данные)
	3.3) нажмите Execute 

		Если запрос был написан верно, то введенные данные будут добавлены в таблицу, а вы увидите подобное сообщение: 
		'Successfully run. Total query runtime: 246 msec. 3 rows affected'

	3.4) на настоящем этапе вводимые данные могут быть любыми, если они удовлетворяют требованиям к типам данных атрибутов таблиц. Файл с данными для заполненеия таблиц должен появиться в ближайшем будущем

ЗАПРОСЫ К БД ЧЕРЕЗ POSTMAN
1) запросите у наставника (или product owner) актуальный jar-файл
2) откройте полученный jar-файл с помощью Winrar или Zip
3) найдите и откройте файл 'local.conf'
4) найдите в файле строчку 
'db = { url = "jdbc:postgresql://localhost:5432/kapinuss", login = "postgres", password = "" }' и замените данные в строчке на данные Вашей локальной БД (см. раздел 'СОЗДАНИЕ ЛОКАЛЬНОЙ БД')

	kapinuss - это название локальной БД (если Вы ее назвали по другому, напишите актуальное для Вас название)
	postgres - имя владельца БД, стоит по умолчанию. Если Вы ничего не меняли, оставьте без изменений
	password - пароль, который Вы указали при создании БД. Если Вы не указали пароль, оставьте поле пустым

5) сохраните файл 'local.conf'

	Перепроверьте, сохранились ли внесенные данные, ведь некоторые архиваторы не хотят вносить изменения. Если внесенные Вами данные не сохранились, попробуйте другой архиватор

6) откройте командную строку и убедитесь, что java установлена

	Для этого выполните команду java -version. Если java установлена, Вы увидите её версию
	
7) в командной строке укажите путь до jar-файла

	Путь до директории, в которой Вы 'находитесь', скорее всего выглядит так - 
	C:\Users\'имя пользователя' (для Windows) или /Users/'имя пользователя'/ (для Mac).
	Вы можете либо поместить ваш файл в директорию пользователя (текущую директорию), либо поменять путь, выполнив команду cd.

		Выполнение команды cd:
		В командной строке Вы должны увидеть: C:\Users\'имя пользователя' cd C:\Users\'имя пользователя\project
		Нажмите Enter и 'переместитесь' из директории C:\Users\'имя пользователя' в директорию C:\Users\'имя пользователя'\project

8) когда Вы убедитесь, что 'находитесь' в нужной директории, выполните в командной строке команду java -jar local2.jar где local2 - это название полученного от наставника jar-файла (имя файла будет отличаться)

	Если Вы все сделали верно, увидите нечто похожее:
	[pool-1-thread-1] INFO  c.z.h.HikariDataSource - HikariPool-1 - Starting...
	[pool-1-thread-1] INFO  c.z.h.HikariDataSource - HikariPool-1 - Start completed.
	[io-compute-11] INFO  o.h.e.s.EmberServerBuilderCompanionPlatform - Ember-Server service bound to address: [::]:8080

9) пройдите по ссылке и ознакомьтесь с документацией по Api https://github.com/stakap/lib-doc/tree/master/Backend/
10) выберите POST запросы на добавление данных в таблицы
11) откройте Postman и сделайте POST-запросы из файла с документацией, сделайте аналогичные POST-запросы со своими данными (см. раздел 'СОЗДАНИЕ ЛОКАЛЬНОЙ БД', п. 3.4)

РАЗВЕРТЫВАНИЕ LIB-VIEW
1) в командной строке выполните команду git clone https://github.com/stakap/lib-view.git
2) найдите в склонированном репозитории файл 'build.sbt'
3) скачайте и установите язык Scala той версии, которая указана в строке 'scalaVersion :=' ( https://www.scala-lang.org )
4) скачайте и установите SBT ( https://www.scala-sbt.org )
5) найдите и откройте файл 'application.conf' в репозитории 'lib-view'
6) найдите в файле строку 'db = { url = "jdbc:postgresql://localhost:5432/kapinuss", login = "postgres", password = "" }' и замените имеющиеся данные БД на данные от Вашей локальной БД (см. раздел 'СОЗДАНИЕ ЛОКАЛЬНОЙ БД')
7) в терминале IDEA или в командной строке запустите lib-view, выполнив команду sbt run (для выполнения в терминале IDEA необходимо сначала открыть проект в IDEA)

	Если Вы все сделали верно, увидите нечто похожее:
	[pool-1-thread-1] INFO  c.z.h.HikariDataSource - HikariPool-1 - Starting...
	[pool-1-thread-1] INFO  c.z.h.HikariDataSource - HikariPool-1 - Start completed.
	[io-compute-11] INFO  o.h.e.s.EmberServerBuilderCompanionPlatform - Ember-Server service bound to address: [::]:8080

8) перейдите на страницу проекта ( http://localhost:80 )
	
	Вместо порта 80 Вы можете задать другой порт. Для этого:
	8.1) создайте файл 'local.conf' в той же директории, где находится файл 'application.conf' (можно сделать в IDEA)
	8.2) скопируйте содержимое файла 'application.conf' в файл 'local.conf'
	8.3) измените порт в файле 'local.conf' в строке 'port =' 
	8.4) при переходе на страницу сайта измените номер порта на указанный в конфигурации в файле 'local.conf' ( http://localhost:'порт' ) 

Когда будете готовы включиться в работу, а также по любым вопросам, обращайтесь к наставнику или Product owner.
Удачи!

АВТОР ПРОЕКТА
Stanislav - https://github.com/stakap